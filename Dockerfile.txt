# Dockerfile

# ==============================================================================
# ESTÁGIO 1: Construção do Ambiente com Dependências de Sistema
# ==============================================================================
# Usamos uma imagem oficial e enxuta do Python como base
FROM python:3.12-slim

# Define o diretório de trabalho dentro do container
WORKDIR /app

# Define variáveis de ambiente para otimizar o Python
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# ==============================================================================
# A CORREÇÃO SUPREMA PARA O ERRO DO RECIBO PDF
# Instala as bibliotecas de sistema operacional que o WeasyPrint precisa para
# renderizar fontes, gráficos e PDFs corretamente no ambiente Linux do Render.
# ==============================================================================
RUN apt-get update && apt-get install -y \
    libpango-1.0-0 \
    libcairo2 \
    libgdk-pixbuf2.0-0 \
    --no-install-recommends \
    && rm -rf /var/lib/apt/lists/*

# ==============================================================================
# ESTÁGIO 2: Instalação das Dependências Python
# ==============================================================================
# Copia apenas o arquivo de dependências primeiro para aproveitar o cache do Docker
COPY requirements.txt .

# Instala as dependências Python
RUN pip install --no-cache-dir -r requirements.txt

# ==============================================================================
# ESTÁGIO 3: Copia e Configuração da Aplicação
# ==============================================================================
# Copia todo o código da sua aplicação para dentro do container
COPY . .

# Expõe a porta que o Gunicorn irá usar
EXPOSE 10000

# O comando para iniciar a aplicação quando o container for executado.
# É o mesmo comando que estava no "Start Command" do Render.
CMD ["gunicorn", "config.wsgi"]